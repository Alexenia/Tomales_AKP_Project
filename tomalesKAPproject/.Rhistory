str(BH1_RGB)
plot(BH1_RGB)
#align extent
BH1_IR_proj<-projectRaster(BH1_IR, BH1_RGB)
#Shapefile
polygon<-shapefile("Polygons.shp")
plot(polygon, add=TRUE)
BH1_shp_ug<-subset(polygon, PlotID=='BH-01 UG') #Ungrazed
BH1_shp_g<-subset(polygon, PlotID=='BH-01 G')#Grazed
BH1_shp_ug
BH1_shp_g<
BH1_shp_g
BH1_shp_g
#Ungrazed
BH1_RGB_mask<-mask(BH1_RGB, BH1_shp_ug)
BH1_IR_mask<-mask(BH1_IR_proj, BH1_shp_ug)
BH1RGB_crop<- crop(BH1_RGB_mask, BH1_shp_ug)
plot(BH1RGB_crop)
ex<-extent(BH1RGB_crop)
BH1IR_crop<- crop(BH1_IR_mask, ex)
plot(BH1IR_crop)
BH1_stack<-stack(BH1RGB_crop, BH1IR_crop)
nlayers(BH1_stack)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_ungrazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_ungrazed)
hist(BH1_ndvi_ungrazed)
#Grazed
BH1_RGB_mask<-mask(BH1_RGB, BH1_shp_g)
BH1_IR_mask<-mask(BH1_IR_proj, BH1_shp_g)
BH1RGB_crop<- crop(BH1_RGB_mask, BH1_shp_g)
plot(BH1RGB_crop)
ex<-extent(BH1RGB_crop)
BH1IR_crop<- crop(BH1_IR_mask, ex)
plot(BH1IR_crop)
BH1_stack<-stack(BH1RGB_crop, BH1IR_crop)
nlayers(BH1_stack)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_grazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_grazed)
hist(BH1_ndvi_grazed)
(BH1_ndvi_ungrazed)
hist(BH1_ndvi_ungrazed)
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
hist(BH1_ndvi_grazed)
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
ggplot(BH1_ndvi_grazed)+
geom_histogram()
ggplot(BH1_ndvi_grazed)+
geom_histogram()
library('ggplot2')
ggplot(BH1_ndvi_grazed)+
geom_histogram()
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
hist(BH1_ndvi_grazed)
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
BH1_ndvi_ungrazed
class(BH1_ndvi_grazed)
BH1_grazed<-as.data.frame(BH1_ndvi_grazed)
View(BH1_grazed)
View(BH1_grazed)
BH1_grazed<-as.data.frame(BH1_ndvi_grazed)
View(BH1_grazed)
View(BH1_grazed)
bwplot(BH1_grazed, violin=TRUE)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_grazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_grazed)
hist(BH1_ndvi_grazed)
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
bwplot(BH1_grazed, violin=TRUE)
bwplot(BH1_grazed, violin=TRUE)
bwplot(BH1_ndvi_grazed, violin=TRUE)
library('rasterVis')
bwplot(BH1_ndvi_grazed, violin=TRUE)
class(BH1_ndvi_ungrazed)
?bwplot()
library('rgr')
install.packages('rgr')
library('rgr')
bwplot(BH1_ndvi_grazed, violin=TRUE)
class(BH1_ndvi_ungrazed)
bwplot(BH1_ndvi_grazed, violin=TRUE)
boxplot(BH1_ndvi_grazed)
class(BH1_ndvi_ungrazed, BH1_ndvi_grazed)
boxplot(BH1_ndvi_grazed, BH1_ndvi_ungrazed)
boxplot(BH1_ndvi_ungrazed BH1_ndvi_grazed)
boxplot(BH1_ndvi_ungrazed, BH1_ndvi_grazed)
boxplot(BH1_ndvi_ungrazed, BH1_ndvi_grazed, ylim=(-.5, .9))
boxplot(BH1_ndvi_ungrazed, BH1_ndvi_grazed, ylim=c(-.5, .9))
boxplot(BH1_ndvi_ungrazed, BH1_ndvi_grazed, ylim=c(-1, 1))
boxplot(BH1_ndvi_ungrazed)
boxplot(BH1_ndvi_grazed)
boxplot(list(BH1_ndvi_ungrazed, BH1_ndvi_grazed), ylim=c(-1, 1))
boxplot(list(BH1_ndvi_ungrazed, BH1_ndvi_grazed))
summary(BH1_ndvi_ungrazed)
rasterVis::bwplot(BH1_ndvi_ungrazed)
stack(BH1_ndvi_grazed, BH1_ndvi_ungrazed)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_grazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_grazed)
hist(BH1_ndvi_grazed)
#compare to ungrazed
hist(BH1_ndvi_ungrazed)
#compare to ungrazed
str(BH1_ndvi_ungrazed)
BH1_ndvi_ungrazed$data$values
BH1_ndvi_ungrazed$data$@ values
BH1_ndvi_ungrazed$data @ values
BH1_ndvi_ungrazed @ data @ values
x<-BH1_ndvi_ungrazed @ data @ values
#compare to ungrazed
BH1_ndvi_ungrazed<-as.data.frame(BH1_ndvi_ungrazed)
View(BH1_ndvi_ungrazed)
View(BH1_ndvi_ungrazed)
BH1_ungrazed<-as.data.frame(BH1_ndvi_ungrazed @ data @ values)
BH1_ndvi_grazed<-as.data.frame(BH1_ndvi_grazed)
BH_01<-tibble(
Ungrazed=BH1_ndvi_ungrazed$layer,
Grazed=BH1_ndvi_grazed$layer
)
#install.packages("RStoolbox")
#install.packages("rasterVis")
#install.packages('raster')
#install.packages('gdalUtils')
install.packages(tidyverse)
#install.packages("RStoolbox")
#install.packages("rasterVis")
#install.packages('raster')
#install.packages('gdalUtils')
install.packages('tidyverse')
library('tidyverse')
BH_01<-tibble(
Ungrazed=BH1_ndvi_ungrazed$layer,
Grazed=BH1_ndvi_grazed$layer
)
BH_01<-tibble(
Grazed=BH1_ndvi_grazed$layer,
Ungrazed=BH1_ndvi_ungrazed$layer
)
BH_01<-tibble(
Value=BH1_ndvi_grazed$layer,
Treatment="Grazed"
)
View(BH_01)
View(BH_01)
BH_01_ug<-tibble(
Value=BH1_ndvi_ungrazed$layer,
Treatment="Ungrazed"
)
BH-01<-rbind(BH_01_g, BH_01_ug)
BH_01_g<-tibble(
Value=BH1_ndvi_grazed$layer,
Treatment="Grazed"
)
BH_01_ug<-tibble(
Value=BH1_ndvi_ungrazed$layer,
Treatment="Ungrazed"
)
BH-01<-rbind(BH_01_g, BH_01_ug)
BH-01<-rbind(BH_01_g, BH_01_ug)
BH_01<-rbind(BH_01_g, BH_01_ug)
BH_01
View(BH_01)
View(BH_01)
BH1_ndvi_grazed$layer
#compare to ungrazed
BH1_ndvi_ungrazed<-as.data.frame(BH1_ndvi_ungrazed)
BH1_ndvi_grazed<-as.data.frame(BH1_ndvi_grazed)
View(BH1_ndvi_ungrazed)
View(BH1_ndvi_ungrazed)
BH_01_g<-tibble(
Value=BH1_ndvi_grazed$layer,
Treatment="Grazed"
)
View(BH_01_g)
View(BH_01_g)
BH_01_ug<-tibble(
Value=BH1_ndvi_ungrazed$layer,
Treatment="Ungrazed"
)
View(BH_01_ug)
View(BH_01_ug)
BH_01<-rbind(BH_01_g, BH_01_ug)
View(BH_01)
View(BH_01)
hist(BH_01)
hist(BH_01$Value)
ggplot(BH_01)+
geom_violin(Value, Treatment)
View(BH_01)
View(BH_01)
ggplot(data=BH_01)+
geom_violin(Value, Treatment)
ggplot(data=BH_01, aes(x=Value, y=Treatment))+
geom_violin()
ggplot(data=BH_01, aes(x=Value, y=Treatment))+
geom_violin(scale='area')
bwplot(BH_01)
boxplot(BH_01)
?boxplot()
ggplot(data=BH_01, aes(x=Treatment, y=Value))+
geom_violin(scale='area')
?list.files()
files <- list.files()
dbf.files <- files[grep(".tif", files, fixed=T)]
for(i in dbf.files) { assign(unlist(strsplit(i, "[.]"))[1], raster(i)) }
#Grazed
BH1_RGB_mask<-mask(BH1_RGB, BH1_shp_g)
BH1_IR_mask<-mask(BH1_IR_proj, BH1_shp_g)
BH1RGB_crop<- crop(BH1_RGB_mask, BH1_shp_g)
plot(BH1RGB_crop)
ex<-extent(BH1RGB_crop)
BH1IR_crop<- crop(BH1_IR_mask, ex)
plot(BH1IR_crop)
BL2_RGB<-stack(BL-02 RGB)
BL2_RGB<-stack("BL-02 RGB")
BL2_RGB<-stack("BL-02 RGB.tif")
BL2_IR<-raster('BL-02 IR.tif')
#Grazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_g)
BL2_shp_ug<-subset(polygon, PlotID=='BL-02 UG') #Ungrazed
BL2_shp_g<-subset(polygon, PlotID=='BL-02 G')#Grazed
#align extent
BL2_IR_proj<-projectRaster(BL2_IR, BL2_RGB)
#Shapefile
polygon<-shapefile("Polygons.shp")
plot(polygon, add=TRUE)
#Shapefile
polygon<-shapefile("Polygons.shp")
plot(polygon, add=TRUE)
BL2_shp_ug<-subset(polygon, PlotID=='BH-01 UG') #Ungrazed
BL2_shp_g<-subset(polygon, PlotID=='BH-01 G')#Grazed
#Ungrazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_ug)
BL2RGB_crop<- crop(BL2_RGB_mask, BL2_shp_ug)
#Ungrazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_ug)
#Ungrazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_ug)
BL2_RGB<-stack("BL-02 RGB.tif")
BL2_IR<-raster('BL-02 IR.tif')
BL2_shp_ug<-subset(polygon, PlotID=='BL-02 UG') #Ungrazed
BL2_shp_g<-subset(polygon, PlotID=='BL-02 G')#Grazed
#align extent
BL2_IR_proj<-projectRaster(BL2_IR, BL2_RGB)
getwd()
setwd("C:\\Users\\Julia Michaels\\Google Drive\\Dissertation Chapter 3\\2018\\All plots 2018")
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
getwd()
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
# Install Packages --------------------------------------------------------
install.packages("RStoolbox")
install.packages("rasterVis")
install.packages('raster')
install.packages('gdalUtils')
install.packages('tidyverse')
install.packages('rgr')
install.packages('uavRst')
library(gdalUtils)
library('RStoolbox')
library('rasterVis')
library('raster')
library('ggplot2')
library('rgr')
library('tidyverse')
library('uavRst')
# Load Data ---------------------------------------------------------------
#Raster
files <- list.files()
dbf.files <- files[grep(".tif", files, fixed=T)]
for(i in dbf.files) { assign(unlist(strsplit(i, "[.]"))[1], raster(i)) }
BH1_RGB<-stack("BH-01 RGB_modified.tif") #because it is tif
BH1_IR<-raster('BH-01 IR_modified.tif')
BL2_RGB<-stack("BL-02 RGB.tif")
BL2_IR<-raster('BL-02 IR.tif')
# BH-01 -------------------------------------------------------------------
#align extent
BH1_IR_proj<-projectRaster(BH1_IR, BH1_RGB)
#Shapefile
polygon<-shapefile("Polygons.shp")
plot(polygon, add=TRUE)
BH1_shp_ug<-subset(polygon, PlotID=='BH-01 UG') #Ungrazed
BH1_shp_g<-subset(polygon, PlotID=='BH-01 G')#Grazed
# Mask and clip rasters to polygon --------------------------------------------------
#Ungrazed
BH1_RGB_mask<-mask(BH1_RGB, BH1_shp_ug)
BH1_IR_mask<-mask(BH1_IR_proj, BH1_shp_ug)
BH1RGB_crop<- crop(BH1_RGB_mask, BH1_shp_ug)
plot(BH1RGB_crop)
ex<-extent(BH1RGB_crop)
BH1IR_crop<- crop(BH1_IR_mask, ex)
plot(BH1IR_crop)
# Stack and Brick IR and RGB --------------------------------------------------------
BH1_stack<-stack(BH1RGB_crop, BH1IR_crop)
nlayers(BH1_stack)
BH1_stack<-writeRaster(BH1_stack, filename="C:\\Users\\Julia Michaels\\Desktop\\BH1_Stack.tif", format="GTiff", overwrite=TRUE)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_ungrazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_ungrazed)
hist(BH1_ndvi_ungrazed)
# Do it all again for BH1 Grazed ------------------------------------------
# Mask and clip rasters to polygon --------------------------------------------------
#Grazed
BH1_RGB_mask<-mask(BH1_RGB, BH1_shp_g)
BH1_IR_mask<-mask(BH1_IR_proj, BH1_shp_g)
BH1RGB_crop<- crop(BH1_RGB_mask, BH1_shp_g)
plot(BH1RGB_crop)
ex<-extent(BH1RGB_crop)
BH1IR_crop<- crop(BH1_IR_mask, ex)
plot(BH1IR_crop)
# Stack and Brick IR and RGB --------------------------------------------------------
BH1_stack<-stack(BH1RGB_crop, BH1IR_crop)
nlayers(BH1_stack)
# Calculate NDVI ----------------------------------------------------------
BH1_ndvi_grazed<-((BH1_stack[[5]]-BH1_stack[[1]])/(BH1_stack[[5]]+BH1_stack[[1]]))
plot(BH1_ndvi_grazed)
hist(BH1_ndvi_grazed)
#compare to ungrazed
BH1_ndvi_ungrazed<-as.data.frame(BH1_ndvi_ungrazed)
BH1_ndvi_grazed<-as.data.frame(BH1_ndvi_grazed)
BH_01_g<-tibble(
Value=BH1_ndvi_grazed$layer,
Treatment="Grazed"
)
BH_01_ug<-tibble(
Value=BH1_ndvi_ungrazed$layer,
Treatment="Ungrazed"
)
BH_01<-rbind(BH_01_g, BH_01_ug)
ggplot(data=BH_01, aes(x=Treatment, y=Value))+
geom_violin(scale='area')
# BL-02 -------------------------------------------------------------------
BL2_shp_ug<-subset(polygon, PlotID=='BL-02 UG') #Ungrazed
BL2_shp_g<-subset(polygon, PlotID=='BL-02 G')#Grazed
#align extent
BL2_IR_proj<-projectRaster(BL2_IR, BL2_RGB)
#Shapefile
polygon<-shapefile("Polygons.shp")
plot(polygon, add=TRUE)
BL2_shp_ug<-subset(polygon, PlotID=='BH-01 UG') #Ungrazed
BL2_shp_g<-subset(polygon, PlotID=='BH-01 G')#Grazed
# Mask and clip rasters to polygon --------------------------------------------------
#Ungrazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_ug)
BL2_IR_mask<-mask(BL2_IR_proj, BL2_shp_ug)
BL2RGB_crop<- crop(BL2_RGB_mask, BL2_shp_ug)
plot(BL2RGB_crop)
ex<-extent(BL2RGB_crop)
BL2IR_crop<- crop(BL2_IR_mask, ex)
plot(BL2IR_crop)
# Stack and Brick IR and RGB --------------------------------------------------------
BL2_stack<-stack(BL2RGB_crop, BL2IR_crop)
nlayers(BL2_stack)
# Calculate NDVI ----------------------------------------------------------
BL2_ndvi_ungrazed<-((BL2_stack[[5]]-BL2_stack[[1]])/(BL2_stack[[5]]+BL2_stack[[1]]))
plot(BL2_ndvi_ungrazed)
hist(BL2_ndvi_ungrazed)
# Do it all again for BL2 Grazed ------------------------------------------
# Mask and clip rasters to polygon --------------------------------------------------
#Grazed
BL2_RGB_mask<-mask(BL2_RGB, BL2_shp_g)
BL2_IR_mask<-mask(BL2_IR_proj, BL2_shp_g)
BL2RGB_crop<- crop(BL2_RGB_mask, BL2_shp_g)
plot(BL2RGB_crop)
ex<-extent(BL2RGB_crop)
BL2IR_crop<- crop(BL2_IR_mask, ex)
plot(BL2IR_crop)
# Stack and Brick IR and RGB --------------------------------------------------------
BL2_stack<-stack(BL2RGB_crop, BL2IR_crop)
nlayers(BL2_stack)
# Calculate NDVI ----------------------------------------------------------
BL2_ndvi_grazed<-((BL2_stack[[5]]-BL2_stack[[1]])/(BL2_stack[[5]]+BL2_stack[[1]]))
plot(BL2_ndvi_grazed)
hist(BL2_ndvi_grazed)
#compare to ungrazed
BL2_ndvi_ungrazed<-as.data.frame(BL2_ndvi_ungrazed)
BL2_ndvi_grazed<-as.data.frame(BL2_ndvi_grazed)
BH_01_g<-tibble(
Value=BL2_ndvi_grazed$layer,
Treatment="Grazed"
)
BH_01_ug<-tibble(
Value=BL2_ndvi_ungrazed$layer,
Treatment="Ungrazed"
)
BH_01<-rbind(BH_01_g, BH_01_ug)
ggplot(data=BH_01, aes(x=Treatment, y=Value))+
geom_violin(scale='area')
getwd()
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
# Install Packages --------------------------------------------------------
install.packages("RStoolbox")
install.packages("rasterVis")
install.packages('raster')
install.packages('gdalUtils')
install.packages('tidyverse')
install.packages('rgr')
install.packages('uavRst')
library(gdalUtils)
library('RStoolbox')
library('rasterVis')
library('raster')
library('ggplot2')
library('rgr')
library('tidyverse')
library('uavRst')
install.packages("rasterVis")
install.packages("tidyverse")
library('uavRst')
library('uavRst')
install.packages('uavRst')
install.packages("RStoolbox")
install.packages("rasterVis")
install.packages('raster')
install.packages('gdalUtils')
install.packages('tidyverse')
install.packages('rgr')
install.packages('uavRst')
install.packages("uavRst")
setwd("C:\Users\aalda\Desktop\T\tomalesKAPproject")
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
install.packages("RStoolbox")
install.packages('uavRst')
library('uavRst')
install.packages("installr"); library(installr)
setwd()
getwd()
getwd()
setwd("c:/path/to/main/dir")
setwd("c:\path\to\main\dir")
getwd()
setwd("C:/Users/aalda/Desktop/Desktop/Alex/R/Alex_1")
mainDir<-"C:/Users/aalda/Desktop/Desktop/Alex/R/Alex_1"
subDir<-"outputDirectory"
mainDir<-"C:/Users/aalda/Desktop/Desktop/Alex/R/Alex_1"
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
#----- Creating a Output folder -----
#mainDir defines the path of working directory
mainDir<-"C:/Users/aalda/Desktop/Desktop/T/tomalesKAPproject"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
#----- Creating a Output folder -----
#mainDir defines the path of working directory
mainDir<-"C:/Users/aalda/Desktop/Desktop/T/tomalesKAPproject"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
getwd()
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
#----- Creating a Output folder -----
#mainDir defines the path of working directory
mainDir<-"C:/Users/aalda/Desktop/Desktop/T/tomalesKAPproject"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
#----- Creating a Output folder -----
#mainDir defines the path of working directory
mainDir<-"C:/Users/aalda/Desktop/Desktop/T/tomalesKAPproject"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
setwd("C:/Users/aalda/Desktop/T/tomalesKAPproject")
#----- Creating a Output folder -----
#mainDir defines the path of working directory
mainDir<-"C:/Users/aalda/Desktop/T/tomalesKAPproject"
#subDir defines the name of the output folder
subDir<-"outputDirectory"
if(file.exists(subDir)){
setwd(file.path(mainDir, subDir))
} else {
dir.create(file.path(mainDir, subDir))
}
install.packages("googledrive")
#load google drive
library("googledrive")
#load google drive
library("googledrive")
